# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: 'app'

# The runtime the application uses.
type: 'php:7.0'

# Configuration of the build of this application.
build:
    flavor: composer

access:
    ssh: admin

# Include the PHP Redis extension
runtime:
    extensions:
        - redis

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'mysql:mysql'
    solr: 'solr:solr'
    drupal6: 'drupal6:mysql'
    redis: "redis:redis"

# The configuration of app when it is exposed to the web.
web:
    # Specific parameters for different URL prefixes.
    locations:
        '/':
            # The folder from which to serve static assets, for this location.
            #
            # This is a filesystem path, relative to the application root.
            root: 'web'

            # How long to allow static assets from this location to be cached.
            # Can be a time in seconds, or -1 for no caching. Times can be
            # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
            # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as 365 days).
            expires: -1

            # Whether to forward disallowed and missing resources from this
            # location to the application.
            # Can be true, false or a URI path string.
            passthru: '/index.php'

        '/.well-known':
            # Allow access to all files in the public files directory.
            allow: true
            expires: 5m
            passthru: false
            root: 'public/.well-known'
            # Do not execute PHP scripts.
            scripts: false

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
    '/web/sites/default/files': 'shared:files/files'
    '/tmp': 'shared:files/tmp'
    '/private': 'shared:files/private'
    '/drush-backups': 'shared:files/drush-backups'
    # letsencrypt mounts
    "/public/.well-known": "shared:files/.well-known"
    "/keys": "shared:files/keys"
    "/.platformsh": "shared:files/.platformsh"

# The build-time dependencies of the app.
dependencies:
  php:
    'drush/drush': '~8'
    'drupal/console': '@stable'

# The hooks executed at various points in the lifecycle of the application.
hooks:
    build: |
      cd web/themes/cbcny_theme
      npm install -g grunt-cli
      npm install
      grunt build
      mv web/sites/default/scripts ./
      cd ~
      curl -sL https://github.com/xenolf/lego/releases/download/v0.3.1/lego_linux_amd64.tar.xz | tar -C .global/bin -xJ --strip-components=1 lego/lego
      curl -sfSL -o .global/bin/platform.phar https://github.com/platformsh/platformsh-cli/releases/download/v3.5.0/platform.phar

    deploy: |
      cd web
      drush -y cache-rebuild
      drush -y updatedb
      drush -y config-import
      drush -y entup

# The configuration of scheduled execution.
crons:
    drupal:
        spec: '*/20 * * * *'
        cmd: 'cd web ; drush core-cron'
    letsencrypt:
        spec: '0 0 1 * *'
        cmd: '/bin/sh /app/scripts/letsencrypt.sh'